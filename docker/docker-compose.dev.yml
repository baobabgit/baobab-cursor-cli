# Docker Compose pour l'environnement de développement
# Configuration optimisée pour le développement et les tests

version: '3.8'

services:
  baobab-cursor-cli-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: baobab-cursor-cli:dev
    container_name: baobab-cursor-cli-dev
    restart: unless-stopped
    
    # Variables d'environnement pour le développement
    environment:
      - CURSOR_TOKEN=${CURSOR_TOKEN:-dev-token}
      - CURSOR_CONFIG=/config/cursor-config.json
      - WORKSPACE_PATH=/workspace
      - OUTPUT_PATH=/output
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DEBUG=true
      - VERBOSE=true
    
    # Volumes montés pour le développement
    volumes:
      # Volume pour les fichiers sources (lecture/écriture pour le développement)
      - type: bind
        source: ${WORKSPACE_PATH:-./workspace}
        target: /workspace
      
      # Volume pour les fichiers de sortie
      - type: bind
        source: ${OUTPUT_PATH:-./output}
        target: /output
      
      # Volume pour la configuration
      - type: bind
        source: ${CONFIG_PATH:-./config}
        target: /config
      
      # Volume pour les logs
      - type: bind
        source: ${LOGS_PATH:-./logs}
        target: /home/cursor-user/logs
      
      # Volume pour le code source (pour le développement)
      - type: bind
        source: ${SRC_PATH:-./src}
        target: /home/cursor-user/src
    
    # Limites de ressources pour le développement
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: 1.0
        reservations:
          memory: 256m
          cpus: 0.25
    
    # Configuration réseau
    network_mode: bridge
    
    # Ports exposés
    ports:
      - "${HOST_PORT:-8080}:8080"
    
    # Configuration de sécurité
    security_opt:
      - no-new-privileges:true
    
    # Utilisateur non-privilégié
    user: "1000:1000"
    
    # Répertoire de travail
    working_dir: /workspace
    
    # Commande par défaut
    command: ["cursor", "--help"]
    
    # Configuration de santé
    healthcheck:
      test: ["CMD", "cursor", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Service pour les tests
  baobab-cursor-cli-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: baobab-cursor-cli:test
    container_name: baobab-cursor-cli-test
    profiles:
      - test
    
    environment:
      - CURSOR_TOKEN=${CURSOR_TOKEN:-test-token}
      - CURSOR_CONFIG=/config/cursor-config.json
      - WORKSPACE_PATH=/workspace
      - OUTPUT_PATH=/output
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DEBUG=true
      - VERBOSE=true
    
    volumes:
      - type: bind
        source: ${TEST_WORKSPACE_PATH:-./test-workspace}
        target: /workspace
      - type: bind
        source: ${TEST_OUTPUT_PATH:-./test-output}
        target: /output
      - type: bind
        source: ${CONFIG_PATH:-./config}
        target: /config
    
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: 0.5
        reservations:
          memory: 128m
          cpus: 0.1
    
    command: ["cursor", "--help"]

  # Service pour la construction
  baobab-cursor-cli-build:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: baobab-cursor-cli:build
    container_name: baobab-cursor-cli-build
    profiles:
      - build
    
    environment:
      - CURSOR_TOKEN=${CURSOR_TOKEN:-build-token}
      - CURSOR_CONFIG=/config/cursor-config.json
      - WORKSPACE_PATH=/workspace
      - OUTPUT_PATH=/output
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    volumes:
      - type: bind
        source: ${BUILD_WORKSPACE_PATH:-./build-workspace}
        target: /workspace
      - type: bind
        source: ${BUILD_OUTPUT_PATH:-./build-output}
        target: /output
      - type: bind
        source: ${CONFIG_PATH:-./config}
        target: /config
    
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: 2.0
        reservations:
          memory: 512m
          cpus: 0.5
    
    command: ["cursor", "--help"]

# Configuration des volumes nommés
volumes:
  workspace_data:
    driver: local
  output_data:
    driver: local
  config_data:
    driver: local
  logs_data:
    driver: local
  src_data:
    driver: local

# Configuration du réseau
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
